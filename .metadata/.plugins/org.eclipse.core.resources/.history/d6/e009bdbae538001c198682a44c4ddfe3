package com.myprodxn.app.dao;

import java.util.List;

import javax.sql.DataSource;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Component;

import com.myprodxn.app.constant.Constants;
import com.myprodxn.app.domain.User;

@Component
public class UserDao implements IUserDao {

	private static final Logger LOG = (Logger) LogManager.getLogger(UserDao.class);

	@Autowired
	private JdbcTemplate jdbcTemplate;

	public void setDataSource(DataSource dataSource) {
		this.jdbcTemplate = new JdbcTemplate(dataSource);
	}

	@Override
	public void insertUser(User user) {
		LOG.info("Inside insertUser Dao method");
		try {
			int updateCount = jdbcTemplate.update(Constants.INSERT_USER,
					new Object[] { Integer.valueOf(user.getUserId()), user.getFirstName(), user.getLastName(),
							user.getPhoneNumber(), user.getEmail(), user.getDob(), user.getNewPassword(),
							user.getConfirmPassword() });
			System.out.println("Record Inserted Successfull:" + updateCount);
		} catch (DataAccessException e) {
			LOG.error(e);
		}
	}

	@Override
	public List<User> selectAllUsers() {
		return jdbcTemplate.query(Constants.DISPLAY_USERS, new BeanPropertyRowMapper<User>(User.class));
	}

}
